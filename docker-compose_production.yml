version: '3.8'

services:
    app:
        command: sh -c "npm ci && npm run build"
        container_name: ${DOCKER_COMPOSE__CONTAINERS_BASE_NAME}-app
        image: node:16
        networks:
            - ${DOCKER_COMPOSE__NETWORK_BASE_NAME}
        volumes:
            - .:/app
        working_dir: /app
    nginx:
        args:
            - NGINX_CONFIG_PATH=./configs/prod/nginx
        build:
            context: .
            dockerfile: ${DOCKER_COMPOSE__SERVICES_PATH}/nginx/Dockerfile
        command: sh -c "service nginx restart && sleep infinity"
        container_name: ${DOCKER_COMPOSE__CONTAINERS_BASE_NAME}-nginx
        networks:
            - ${DOCKER_COMPOSE__NETWORK_BASE_NAME}
        ports:
            - 80:80
            - 443:443
        volumes:
            - ./public:${DOCKER_COMPOSE__VOLUME_NGINX_PROJECT_CONTAINER}/public
            - ./logs/nginx:/var/log/nginx
            - ${DOCKER_COMPOSE__VOLUME_LETSENCRYPT_LOCAL}:${DOCKER_COMPOSE__VOLUME_LETSENCRYPT_CONTAINER}
            - ${DOCKER_COMPOSE__VOLUME_CERTBOT_LOCAL}:${DOCKER_COMPOSE__VOLUME_CERTBOT_CONTAINER}
        working_dir: /var/www
    certbot:
        image: certbot/certbot
        command: certonly --webroot -w ${DOCKER_COMPOSE__VOLUME_CERTBOT_CONTAINER} -d oleg-oleinik.com -d www.oleg-oleinik.com --non-interactive --agree-tos -m m160160@yandex.ru
        volumes:
            - ./public:${DOCKER_COMPOSE__VOLUME_NGINX_PROJECT_CONTAINER}/public
            - ${DOCKER_COMPOSE__VOLUME_LETSENCRYPT_LOCAL}:${DOCKER_COMPOSE__VOLUME_LETSENCRYPT_CONTAINER}
            - ${DOCKER_COMPOSE__VOLUME_CERTBOT_LOCAL}:${DOCKER_COMPOSE__VOLUME_CERTBOT_CONTAINER}
networks:
    takeoff-network:
        driver: bridge
